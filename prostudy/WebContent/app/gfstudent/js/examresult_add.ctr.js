angular
		.module("prostudyApp")
		.controller(
				"gfExamResultAddCtr",
				function($scope, $window, $mdToast, $timeout, $mdSidenav,
						$mdUtil, $log, $q, appEndpointSF, $state, $stateParams,
						$mdDialog, objectFactory, answerOfMediumList,
						standardList) {

					$scope.loading = true;
					var gfStudentService = appEndpointSF.getGFStudentService();
					var partnerSchoolService = appEndpointSF
							.getPartnerSchoolService();

					$scope.answerOfMediumList = answerOfMediumList;
					$scope.standardList = standardList
					$scope.data = {
						grfRegNo : ''
					};

					$scope.examResultList = [];
					$scope.currentSchoolStandardList = [];

					$scope.getEmptyExamResult = function(school, book) {
						return {
							examYear : '',
							standard : book.standard,
							studName : '',
							mediumOfAnswer : '',
							marks : '',
							createdDate : new Date(),
							modifiedBy : $scope.curUser.email_id,
							school : school,
							institute : $scope.curUser.instituteObj
						}
					}

					$scope.getBookDetailList = function(school) {
						if (year1 == undefined) {
							var date1 = new Date();
							var year1 = date1.getFullYear();
							year1 = year1.toString().substr(2, 2);
							year1 = date1.getFullYear() + "-"
									+ (Number(year1) + 1);
						}
						$scope.bookDetailList = [];
						for (q = 0; q < school.examDetailList.length; q++) {
							if (school.examDetailList[q].yearOfExam == year1) {
								if (school.examDetailList[q].bookSummary) {
									$scope.bookDetailList = school.examDetailList[q].bookSummary.bookDetail;
								} else {
									return null;
								}
							}
						}
						return $scope.bookDetailList;
					}

					$scope.getResultListFor = function(std) {
						var tempExamResultList = [];

						angular.forEach($scope.examResultList, function(er) {
							if (std == er.standard) {
								tempExamResultList.push(er);
							}
						});

						return tempExamResultList;
					}

					$scope.grfRegNoChange = function(grfRegNo) {

						$scope.loading = true;

						$scope.examResultList = [];
						$scope.currentSchoolStandardList = [];
						$scope.foundSchool = null;

						partnerSchoolService
								.getSchoolByAutoGeneratedID(grfRegNo)
								.then(
										function(resp) {

											if (resp.result.id) {
												$scope.foundSchool = resp;
											}
											if ($scope.foundSchool == null) {
												$scope.grfRegNoNotFound = "This GRF. Reg. No. is not found. Please correct it and try. Or contact the office.";
												$scope.loading = false;
												return;
											} else {
												var studPerStd = 3;
												// three students/results per
												// std
												$scope.bookDetailList = $scope
														.getBookDetailList($scope.foundSchool);

												if ($scope.bookDetailList == null) {
													$scope.grfRegNoNotFound = "There are no book details associated with this school/college. Please contact the office.";
													$scope.loading = false;
													$scope.foundSchool = null;
													return;
												}

												// Get ResultList if already
												// entered.
												gfStudentService
														.serachExamResultEntitiesBySchool(
																$scope.foundSchool)
														.then(
																function(resp) {
																	angular
																			.forEach(
																					$scope.bookDetailList,
																					function(
																							book) {

																						if ($scope.currentSchoolStandardList
																								.indexOf(book.standard) == -1) {
																							$scope.currentSchoolStandardList
																									.push(book.standard);

																							var foundResultList = [];

																							if (resp.items
																									&& resp.items.length > 0) {
																								var foundResultList = $scope
																										.getExistingResultListForStd(
																												resp.items,
																												book.standard);
																								if (foundResultList.length > 0) {
																									$scope.examResultList = $scope.examResultList
																											.concat(foundResultList);

																								}
																							}

																							for (var i = 1; i <= (studPerStd - foundResultList.length); i++) {
																								$scope.examResultList
																										.push($scope
																												.getEmptyExamResult(
																														$scope.foundSchool,
																														book));

																							}
																						}
																					});

																	$scope.loading = false;
																});
											}

										});
					}

					$scope.getExistingResultListForStd = function(resultList,
							std) {
						var foundResultList = [];
						angular.forEach(resultList, function(resultObj) {
							if (resultObj.standard == std)
								foundResultList.push(resultObj);
						});
						return foundResultList;

					}

					$scope.addExamResultList = function() {
						gfStudentService.addExamResults($scope.examResultList)
								.then(function(resp) {
									$scope.showAddToast();
									$state.reload();
								});
					}

					$scope.cancel = function() {
						$state.go('gandhifoundation');
					}

					$scope.waitForServiceLoad = function() {
						if (appEndpointSF.is_service_ready) {
							$scope.loading = false;
						} else {
							$log.debug("Services Not Loaded, watiting...");
							$timeout($scope.waitForServiceLoad, 1000);
						}
					}

					$scope.waitForServiceLoad();

					$scope.query = {
						order : 'description',
						limit : 120,
						page : 1
					};

					$scope.cancelButton = function() {
						$state.go("studentModule", {});
					}

					$scope.getStandardLabelStyle = function() {
						return {
							'padding-top' : '25px'
						};

					}
					$scope.getStudNameStyle = function() {
						return {
							'padding-left' : '100px',
							'padding-right' : '50px',
						};

					}
				});
