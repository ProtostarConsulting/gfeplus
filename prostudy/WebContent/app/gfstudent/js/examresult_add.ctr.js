angular
		.module("prostudyApp")
		.controller(
				"gfExamResultAddCtr",
				function($scope, $window, $mdToast, $timeout, $mdSidenav,
						$mdUtil, $log, $q, appEndpointSF, $state, $stateParams,
						$mdDialog, objectFactory, answerOfMediumList,
						standardList) {
					$scope.answerOfMediumList = answerOfMediumList;
					$scope.standardList = standardList
					$scope.grfRegNo = '';

					$scope.examResultList = [];
					$scope.currentSchoolStandardList = [];

					$scope.getEmptyExamResult = function(school, book) {
						return {
							examYear : '',
							standard : book.standard,
							studName : '',
							mediumOfAnswer : '',
							marks : '',
							createdDate: new Date(),
							modifiedBy: $scope.curUser.email_id,
							school : school,							
							institute : $scope.curUser.instituteObj
						}
					}

					$scope.getBookDetailList = function(school) {
						if (year1 == undefined) {
							var date1 = new Date();
							var year1 = date1.getFullYear();
							year1 = year1.toString().substr(2, 2);
							year1 = date1.getFullYear() + "-"
									+ (Number(year1) + 1);
						}
						$scope.bookDetailList = [];
						for (q = 0; q < school.examDetailList.length; q++) {
							if (school.examDetailList[q].yearOfExam == year1) {
								$scope.bookDetailList = school.examDetailList[q].bookSummary.bookDetail;
							}
						}
						return $scope.bookDetailList;
					}
					
					$scope.getResultListFor = function(std) {
						var tempExamResultList = [];
						
						angular.forEach($scope.examResultList, function(er){
							if (std == er.standard) {
								tempExamResultList.push(er);
							}
						});
						
						return tempExamResultList;
					}

					$scope.grfRegNoChange = function(grfRegNo) {
						$scope.examResultList = [];
						$scope.currentSchoolStandardList = [];
						$scope.foundSchool = null;

						angular.forEach($scope.pSchoolList, function(s) {
							if (grfRegNo == s.autoGenerated)
								$scope.foundSchool = s;
						});

						if ($scope.foundSchool == null) {
							$scope.grfRegNoNotFound = "This GRF. Reg. No. is not found. Please correct it.";
						} else {
							$scope.bookDetailList = $scope
									.getBookDetailList($scope.foundSchool);
							angular.forEach($scope.bookDetailList, function(
									book) {
								if ($scope.currentSchoolStandardList
										.indexOf(book.standard) == -1) {
									$scope.currentSchoolStandardList
											.push(book.standard);
									//for stud1
									$scope.examResultList.push($scope
											.getEmptyExamResult($scope.foundSchool, book));
									//for stud2
									$scope.examResultList.push($scope
											.getEmptyExamResult($scope.foundSchool, book));
									//for stud3
									$scope.examResultList.push($scope
											.getEmptyExamResult($scope.foundSchool, book));
								}
							});
						}
					}

					$scope.addExamResultList = function() {
						var gfStudentService = appEndpointSF
								.getGFStudentService();

						gfStudentService.addExamResults($scope.examResultList)
								.then(function(resp) {
									$scope.showAddToast();
									$state.reload();
								});
					}

					$scope.getPartnerByInstitute = function() {
						$scope.loading = true;
						var PartnerSchoolService = appEndpointSF
								.getPartnerSchoolService();
						PartnerSchoolService.getPartnerByInstitute(
								$scope.curUser.instituteID).then(
								function(pSchoolList) {
									$scope.pSchoolList = pSchoolList;
									$scope.loading = false;
								});
					}

					$scope.cancel = function() {
						$state.go('gandhifoundation');
					}

					$scope.waitForServiceLoad = function() {
						if (appEndpointSF.is_service_ready) {
							$scope.getPartnerByInstitute();
						} else {
							$log.debug("Services Not Loaded, watiting...");
							$timeout($scope.waitForServiceLoad, 1000);
						}
					}

					$scope.waitForServiceLoad();

					$scope.query = {
						order : 'description',
						limit : 120,
						page : 1
					};
					
					$scope.cancelButton = function() {
						$state.go("studentModule", {});
					}
					
					$scope.getStandardLabelStyle = function() {
						return {
							'padding-top' : '25px'
						};

					}
					$scope.getStudNameStyle = function() {
						return {
							'padding-left' : '100px',
							'padding-right' : '50px',
						};

					}
				});
