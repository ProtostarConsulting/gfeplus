import { Component, Optional, OnInit } from '@angular/core';
import { MdDialog, MdDialogRef, MdSnackBar } from '@angular/material';
import { Router, ActivatedRoute, Params } from '@angular/router';

import { courierTypelist, logisticsList } from '../core/constant.app';
import { PartnerSchool, ExamDetail, BookDetail, BookSummary } from '../partnerschool/partner-school';
import { PartnerSchoolService } from '../partnerschool/school.service';
import { CourierSerivces, GFCourier } from './courier.service';
import { GFBookStockService, GFBook } from '../gfbook/gfbook.service';

import { RouteData } from '../route-data.provider';

@Component({
    moduleId: module.id,
    selector: 'proerp-add-courier-fromPS',
    templateUrl: './gfCourier_directAddFromPS.html',
    styleUrls: ['./feature.component.css']
})

export class AddCourierFromPSComponent {

    school: PartnerSchool;
    yearOfExam: string;
    CourierType: string;
    Logistics: string;
    bookStocks: Array<GFBook>;
    tempCourierObj: GFCourier;
    courierTypelist: string[];
    logisticsList: string[];
    tempPartnerSchool: any;
    newCourierObj: GFCourier = new GFCourier();
    courierDispatchDate: Date = new Date();
    bookDetail: Array<BookDetail>;
    schoolist:Array<PartnerSchool>;
    bookSummary:BookSummary;
    name:string;

    constructor(
        private route: ActivatedRoute,
        private router: Router,
        private routeData: RouteData,
        private courierservice: CourierSerivces,
        private partnerschoolservice: PartnerSchoolService,
        private gfbookService: GFBookStockService
    ) {
        this.courierTypelist = courierTypelist;
        this.logisticsList = logisticsList;
        this.tempCourierObj = {
            id: '',
            instituteID: 5910974510923776,
            autoGenerated: '',
            courierCost: 0,
            courierDocketID: '',
            courierName: '',
            courierPhone1: '',
            courierPhone2: '',
            courierType: '',
            logistics: '',
            totalWeight: 0,
            courierFrom: '',
            courierTo: '',
            schoolName: new PartnerSchool(),
            totalFees: 0,
            courierDispatchDate: new Date(),
            bookQty: 0,
            bookLineItemList: [],
            courierDispatchNotes: ''
        };
        this.tempPartnerSchool = {
            examDetailList: ExamDetail
        };
    }

    ngOnInit() {
        if (this.routeData.params.selectedSchool) {
            this.school = this.routeData.params.selectedSchool;
            this.name = this.school.schoolName;
            this.yearOfExam = this.routeData.params.yearOfExam;
            this.tempCourierObj.autoGenerated = this.school.autoGenerated;
            this.tempCourierObj.schoolName = this.school.schoolName;
            this.tempCourierObj.courierTo = this.school.schoolName
								+ ", "
								+ this.school.address.line1
								+ ", "
								+ this.school.address.city
								+ ", "
								+ this.school.address.state
								+ ", "
								+ "PIN-"
								+ this.school.address.pin;

			this.tempCourierObj.courierFrom = "Protostar, E101, MG Apts, Kasarwadi, Pune";
            this.getGFBookStockByInstituteId();
            this.routeData.params.selectedCourierID = null;
        }
    }

    addGFCourier() {
        this.newCourierObj.instituteID = this.tempCourierObj.instituteID;
        this.tempCourierObj.schoolName = this.school;
        this.newCourierObj.courierDispatchDate = this.courierDispatchDate;
        this.newCourierObj.courierFrom = this.tempCourierObj.courierFrom;
        this.newCourierObj.courierTo = this.tempCourierObj.courierTo;
        this.newCourierObj.courierType = this.tempCourierObj.courierType;
        this.newCourierObj.logistics = this.tempCourierObj.logistics;

        for (let i = 0; i < this.bookDetail.length; i++) {
            for (let j = 0; j < this.bookStocks.length; j++) {
                if (this.bookDetail[i].bookName == this.bookStocks[j].id) {
                    this.bookStocks[j].bookQty = this.bookDetail[i].totalStud;
                    this.newCourierObj.totalWeight = this.tempCourierObj.totalWeight
                        + this.bookStocks[j].weight
                        * this.bookDetail[i].totalStud;
                    this.newCourierObj.bookLineItemList
                        .push(this.bookStocks[j]);

                }
            }
        }

        this.courierservice.addCourier(this.newCourierObj).then(courierObj => {
            console.log('Saved currentSchool:' + courierObj);
            this.tempCourierObj = courierObj;
            if (this.tempCourierObj) {
                this.router.navigate(['/courier-index/listcourier']);
            }
        });

    }

    getSchoolByAutoGeneratedID() {

        this.partnerschoolservice.getInstituteByGRFNo(this.school.autoGenerated).then(list => {
           
            this.school = list.items[0];
            
            this.tempCourierObj.schoolName = this.school;
            this.tempCourierObj.courierFrom = "Protostar, E101, MG Apts, Kasarwadi, Pune";

            if (this.school.examDetailList != undefined) {
                for (let i = 0; i < this.school.examDetailList.length; i++) {
                    if (this.school.examDetailList[i].yearOfExam == this.yearOfExam) {
                        this.tempPartnerSchool.examDetailList = this.school.examDetailList[i];
                    }
                }
            }
            this.bookDetail = this.tempPartnerSchool.examDetailList.bookSummary.bookDetail;
            this.newCourierObj.totalFees = 0;
            this.newCourierObj.totalFees = this.tempPartnerSchool.examDetailList.bookSummary.amtForGRF80per;
            this.newCourierObj.totalWeight = 0;
            
            for (let i = 0; i < this.bookDetail.length; i++) {
                for (let j = 0; j < this.bookStocks.length; j++) {

                    if (this.bookDetail[i].bookName == this.bookStocks[j].id) {

                        this.newCourierObj.totalWeight = (this.newCourierObj.totalWeight)
                            + (this.bookStocks[j].weight * this.bookDetail[i].totalStud);
                    }
                }
            }
        });
    }

    getGFBookStockByInstituteId(): void {
        this.gfbookService.getGFBookByInstituteId(this.school.instituteID).then(list => {
            this.bookStocks = list;
            this.getSchoolByAutoGeneratedID();
        });
    }
}