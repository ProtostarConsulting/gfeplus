import { Component, Optional } from '@angular/core';
import { Router, ActivatedRoute, Params } from '@angular/router';
import { MdDialog, MdDialogRef, MdSnackBar } from '@angular/material';

import { GoogleEndpointService } from '../core/google-endpoint.service';
import { CourierSerivces, GFCourier } from './courier.service';
import { GFBookStockService, GFBook } from '../gfbook/gfbook.service';

import { RouteData } from '../route-data.provider';

@Component({
    moduleId: module.id,
    selector: 'proerp-search-courier',
    templateUrl: 'search-courier.component.html',
    styleUrls: ['./feature.component.css']
})

export class SearchCourierComponent {

    Years: Array<string> = [];
    autoGenerated:string;
    errorMsg:string;
    tempCourierObj:GFCourier;
    gfCouriertList:GFCourier[];
    courier:GFCourier;
    tempCourier:GFCourier = new GFCourier();
    bookStocks: GFBook[];
    instituteID:number;

    constructor(private route: ActivatedRoute,
        private router: Router,
        private routeData: RouteData,
        private courierservice:CourierSerivces,
        private gfbookService: GFBookStockService) {
            this.gfCouriertList = new Array<GFCourier>();
            this.instituteID = 5910974510923776;
            this.getCurYear();
            this.getPrvYears();
            this.getNextYears();
            console.log('came to contructor...');
    }

    year: string;
    curyear1: string;
    yearOfExam: string;
    getNextYears = function () {
        let date = new Date();
        for (let i = 0; i < 3; i++) {
            let year = date.getFullYear();
            this.year = year.toString().substr(2, 2);
            this.Years.push(date.getFullYear() + "-"
                + (Number(this.year) + 1));
            date.setFullYear(date.getFullYear() + 1);
        }
    }

    getCurYear() {
        let date = new Date(2016, 11, 11);
        let da = new Date();
        let curyear = date.getFullYear();
        this.curyear1 = curyear.toString().substr(2, 2);
        this.yearOfExam = date.getFullYear() + "-"
            + (Number(this.curyear1) + 1);
    }

    getPrvYears = function () {
        let date = new Date();
        for (let i = 0; i < 3; i++) {
            let year = date.getFullYear();
            this.year = year.toString().substr(2, 2);
            this.Years.push((date.getFullYear() - 1) + "-"
                + (Number(this.year)));
            date.setFullYear(date.getFullYear() - 1);
        }

    }

    ngOnInit(){
        console.log('came to ngOnInit...');
        this.getGFBookStockByInstituteId();
    }

    getCourierByGRFNo(autoGenerated:string){
        this.courierservice.getCourierByGRFNo(autoGenerated).then(list => {
            this.courier = list;
            if(!this.courier.id){
                this.errorMsg = "No Record Found";
                this.tempCourier = this.courier;
            }
            else{
                this.tempCourier = this.courier;
                this.errorMsg = "";
                this.yearOfExam = "";
                this.autoGenerated = "";
            }
        });
    }

    getGFBookStockByInstituteId(): void {
        this.gfbookService.getGFBookByInstituteId(this.instituteID).then(list => {
            this.bookStocks = list;
        });
    }
}